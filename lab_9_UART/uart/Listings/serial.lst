C51 COMPILER V9.60.7.0   SERIAL                                                            03/25/2024 20:31:00 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE SERIAL
OBJECT MODULE PLACED IN .\Objects\serial.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE serial.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\se
                    -rial.lst) TABS(2) OBJECT(.\Objects\serial.obj)

line level    source

   1          #include <at89c5131.h>
   2          
   3          bit tx_complete = 0, rx_complete = 0; // Bit flags for interrupts
   4          
   5          /**********************************************************
   6          uart_init(): 
   7            Initialization function to be completed
   8            Initializes UART peripheral for 8-bit transfer, 
   9            1 start and 1 stop bit. 
  10            
  11            Please write TH1 value for required baud rate
  12          ***********************************************************/  
  13          void uart_init(void)
  14          {
  15   1        TMOD = 0x20;                // Configure Timer 1 in Mode 2
  16   1        TH1 = 0xFD;               // Load TH1 to obtain require Baudrate (Refer serial_io.pdf for calculations)
  17   1        SCON = 0x50;                // Configure UART peripheral for 8-bit data transfer 
  18   1        TR1 = 1;              // Start Timer 1
  19   1        ES = 1;               // Enable Serial Interrupt
  20   1        EA = 1;               // Enable Global Interrupt
  21   1      }
  22          
  23          /**********************************************************
  24          transmit_char(<unsigned char ch>): 
  25            Transmits a character using UART
  26          ***********************************************************/  
  27          void transmit_char(unsigned char ch)
  28          {
  29   1        SBUF = ch;                // Load data in SBUF
  30   1        while(!tx_complete);      // Wait for tx_complete flag (interrupt to complete)
  31   1        tx_complete = 0;          // Clear tx_complete flag 
  32   1      }
  33          
  34          /**********************************************************
  35          transmit_string(<String pointer>): 
  36            Transmit a string using UART
  37          ***********************************************************/  
  38          void transmit_string(unsigned char *s)
  39          {
  40   1        while(*s != 0)
  41   1        {
  42   2            transmit_char(*s++);
  43   2        }
  44   1      }
  45          
  46          /**********************************************************
  47          receive_char(): 
  48            Receives a character through UART. Returns a 
  49            character.
  50          ***********************************************************/    
  51          unsigned char receive_char(void)
  52          {
  53   1        unsigned char ch = 0;
  54   1        while(!rx_complete);        // Wait for rx_complete(interrupt to complete)
C51 COMPILER V9.60.7.0   SERIAL                                                            03/25/2024 20:31:00 PAGE 2   

  55   1        rx_complete = 0;
  56   1        ch = SBUF;                  // Read data from SBUF
  57   1        return ch;                  // Return read character
  58   1      }
  59          
  60          /**********************************************************
  61          Serial_ISR(): 
  62            Interrupt service routine for UART interrupt.
  63            Determines whether it is a transmit or receive
  64            interrupt and raise corresponding flag.
  65            Transmit or receive functions (defined above) monitor
  66            for these flags to check if data transfer is done.
  67          ***********************************************************/  
  68          void serial_ISR(void) interrupt 4
  69          {
  70   1          if(TI==1)     // Check whether TI is set
  71   1          {
  72   2            TI = 0;     // Clear TI flag
  73   2            tx_complete = 1;  // Set tx_complete flag indicating interrupt completion
  74   2          }
  75   1          else if(RI==1)      // Check whether RI is set
  76   1          {
  77   2            RI = 0;     // Clear RI flag
  78   2            rx_complete = 1;  // Set rx_complete flag indicating interrupt completion
  79   2          }
  80   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     87    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
