C51 COMPILER V9.60.7.0   MAIN                                                              04/06/2024 13:57:04 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <at89c5131.h>
   2          #include "lcd.h"    // Header file with LCD interfacing functions
   3          #include "serial.h" // Header file with UART interfacing functions
   4          #include <stdio.h>
   5          
   6          void state_a(char acc_no, int balance_1,int balance_2)
   7          {
   8   1        char bal_1[6];
   9   1        char bal_2[6];
  10   1        int_to_string(balance_1, bal_1+6);
  11   1        int_to_string(balance_2, bal_2+6);
  12   1        switch(acc_no)
  13   1            {
  14   2              case '1':
  15   2                transmit_string("Account Holder: Steven\r\n");
  16   2                transmit_string("Account Balance: ");
  17   2                transmit_string(bal_1);
  18   2                transmit_string("\r\n");
  19   2                break;
  20   2              
  21   2              case '2':
  22   2                transmit_string("Account Holder: Gordon\r\n");
  23   2                transmit_string("Account Balance: ");
  24   2                transmit_string(bal_2);
  25   2                transmit_string("\r\n");
  26   2                break;
  27   2                    
  28   2              default:
  29   2                transmit_string("No such account, please enter valid details\r\n");
  30   2                break;
  31   2            }
  32   1      }
  33          
  34          void state_w(char acc_no, int *balance_1,int *balance_2)
  35          {
  36   1        unsigned char amount_ones=0;
  37   1        unsigned char amount_tens=0;
  38   1        int amount=0;
  39   1        int five;
  40   1        int one;
  41   1        
  42   1        char bal_1[6];
  43   1        char bal_2[6];
  44   1        char hundred_5[3];
  45   1        char hundred_1[4];
  46   1        int_to_string(*balance_1, bal_1+6);
  47   1        int_to_string(*balance_2, bal_2+6);
  48   1        switch(acc_no)
  49   1            {
  50   2              case '1':
  51   2                transmit_string("Account Holder: Steven\r\n");
  52   2                transmit_string("Account Balance: ");
  53   2                transmit_string(bal_1);
  54   2                transmit_string("\r\n");
C51 COMPILER V9.60.7.0   MAIN                                                              04/06/2024 13:57:04 PAGE 2   

  55   2                transmit_string("Enter Amount, in hundreds : ");
  56   2                amount_tens = receive_char();
  57   2                amount_ones = receive_char();
  58   2                transmit_string("\r\n");
  59   2                if (amount_tens <'0' || amount_tens >'9'||amount_ones <'0' || amount_ones >'9')
  60   2                { 
  61   3                  transmit_string("Invalid Amount\r\n");
  62   3                  break;
  63   3                }
  64   2                amount = (amount_tens-'0')*1000 +(amount_ones-'0')*100;
  65   2                if (amount > *balance_1)
  66   2                {
  67   3                  transmit_string("Insufficient Funds\r\n");
  68   3                  break;
  69   3                }
  70   2                five = amount/500;
  71   2                one = (amount%500)/100;
  72   2            
  73   2                sprintf(hundred_5,"%d",five);
  74   2                sprintf(hundred_1,"%d",one);
  75   2                
  76   2                *balance_1 = *balance_1- amount;
  77   2                bal_1[0]='0';
  78   2                int_to_string(*balance_1, bal_1+6);
  79   2                transmit_string("Remaining Balance: ");
  80   2                transmit_string(bal_1);
  81   2                transmit_string("\r\n");
  82   2                transmit_string("500 Notes: ");
  83   2                transmit_string(hundred_5);
  84   2                transmit_string(", 100 Notes: ");         
  85   2                transmit_string(hundred_1);
  86   2                transmit_string("\r\n");
  87   2                break;
  88   2              
  89   2              case '2':
  90   2                transmit_string("Account Holder: Gordon\r\n");
  91   2                transmit_string("Account Balance: ");
  92   2                transmit_string(bal_2);
  93   2                msdelay(2000);
  94   2                transmit_string("\r\nEnter Amount, in hundreds : ");
  95   2                amount = receive_char();
  96   2                amount_tens = receive_char();
  97   2                amount_ones = receive_char();
  98   2                if (amount_tens <'0' || amount_tens >'9'||amount_ones <'0' || amount_ones >'9')
  99   2                {
 100   3                  transmit_string("Invalid Amount\r\n");
 101   3                  break;
 102   3                }
 103   2                amount = (amount_tens-'0')*1000 +(amount_ones-'0')*100;
 104   2                if (amount > *balance_2)
 105   2                {
 106   3                  transmit_string("Insufficient Funds\r\n");
 107   3                  break;
 108   3                }
 109   2                five = amount/500;
 110   2                one = (amount%500)/100;
 111   2                sprintf(hundred_5,"%d",five);
 112   2                sprintf(hundred_1,"%d",one);
 113   2                
 114   2                *balance_2 = *balance_2 - amount;
 115   2                bal_2[0] ='0';
 116   2                int_to_string(*balance_2, bal_2+6);
C51 COMPILER V9.60.7.0   MAIN                                                              04/06/2024 13:57:04 PAGE 3   

 117   2                transmit_string("Remaining Balance: ");
 118   2                transmit_string(bal_2);
 119   2                transmit_string("500 Notes: ");
 120   2                transmit_string(hundred_5);
 121   2                transmit_string(", 100 Notes: ");         
 122   2                transmit_string(hundred_1); 
 123   2                transmit_string("\r\n");          
 124   2                break;
 125   2                    
 126   2              default:
 127   2                transmit_string("No such account, please enter valid details\r\n");
 128   2                break;
 129   2            }
 130   1      }
 131          
 132          void main(void)
 133          {
 134   1        unsigned char ch=0;
 135   1        unsigned char acc_no=0;
 136   1        int balance_1 = 10000;
 137   1        int balance_2 = 10000;
 138   1        
 139   1        lcd_init();
 140   1        uart_init();
 141   1      
 142   1        while(1)
 143   1        {
 144   2            transmit_string("Press A for Account display and W for withdrawing cash\r\n");
 145   2            ch = receive_char();
 146   2            switch(ch)
 147   2            {
 148   3              case 'a':
 149   3                transmit_string("Hello, Please enter Account Number\r\n");
 150   3                acc_no = receive_char();
 151   3                state_a(acc_no,balance_1,balance_2);
 152   3                break;
 153   3              
 154   3              case 'w':
 155   3                transmit_string("Withdraw state, enter account number\r\n");
 156   3                acc_no = receive_char();
 157   3                state_w(acc_no,&balance_1,&balance_2);
 158   3                break;
 159   3                    
 160   3              default:
 161   3                transmit_string("Incorrect key pressed\r\n");
 162   3                break;
 163   3            }
 164   2            msdelay(100);
 165   2        }
 166   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1347    ----
   CONSTANT SIZE    =    421    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      66
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
